# === nginx.conf ===
# Nginx Load Balancer Configuration for SafeStreets Bangladesh
# Optimized for 8000+ concurrent connections

user nginx;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

events {
    worker_connections 10240;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=16k;
    error_log /var/log/nginx/error.log warn;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer Settings
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml application/atom+xml image/svg+xml;
    gzip_min_length 1000;
    gzip_disable "msie6";

    # Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=reports:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Cache Settings
    proxy_cache_path /var/cache/nginx/proxy levels=1:2 keys_zone=api_cache:100m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:50m max_size=500m inactive=7d use_temp_path=off;

    # Upstream Backend Servers
    upstream backend {
        least_conn;
        keepalive 300;
        
        server app1:5001 weight=1 max_fails=3 fail_timeout=30s;
        server app2:5002 weight=1 max_fails=3 fail_timeout=30s;
        server app3:5003 weight=1 max_fails=3 fail_timeout=30s;
        server app4:5004 weight=1 max_fails=3 fail_timeout=30s;
    }

    # Upstream WebSocket Servers
    upstream websocket {
        ip_hash;  # Sticky sessions for WebSocket
        
        server app1:5001 weight=1 max_fails=3 fail_timeout=30s;
        server app2:5002 weight=1 max_fails=3 fail_timeout=30s;
        server app3:5003 weight=1 max_fails=3 fail_timeout=30s;
        server app4:5004 weight=1 max_fails=3 fail_timeout=30s;
    }

    # Health Check Server
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /nginx-status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;
            deny all;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name safestreets-bd.com www.safestreets-bd.com;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main HTTPS Server
    server {
        listen 443 ssl http2;
        server_name safestreets-bd.com www.safestreets-bd.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Root location
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache static files
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|webp|woff|woff2|ttf|svg|eot)$ {
                expires 30d;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # API Routes
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=50 nodelay;
            limit_conn addr 100;
            
            # Proxy settings
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Connection settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Keep-alive
            proxy_set_header Connection "";
            
            # Cache GET requests
            proxy_cache_methods GET HEAD;
            proxy_cache api_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            
            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status;
            add_header X-Request-ID $request_id;
        }

        # Reports endpoint with stricter rate limiting
        location /api/reports {
            limit_req zone=reports burst=10 nodelay;
            limit_conn addr 20;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Larger timeouts for file uploads
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            client_max_body_size 50m;
        }

        # WebSocket endpoint
        location /socket.io/ {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            
            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://backend/api/health;
            proxy_set_header Host $host;
            
            # No caching for health checks
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # Admin routes with IP restrictions
        location /api/admin/ {
            # IP whitelist (update with actual admin IPs)
            allow 103.106.236.0/24;  # Example: Dhaka ISP range
            allow 202.86.216.0/24;   # Example: Another ISP range
            allow 172.20.0.0/16;     # Docker network
            deny all;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # No caching for admin routes
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # Static file serving with CDN fallback
        location /images/ {
            root /usr/share/nginx/html;
            try_files $uri @cdn;
            
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        location @cdn {
            proxy_pass https://cdn.safestreets-bd.com;
            proxy_set_header Host cdn.safestreets-bd.com;
            proxy_ssl_server_name on;
            
            proxy_cache static_cache;
            proxy_cache_valid 200 7d;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        }

        # Block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ /\.git {
            deny all;
        }
        
        location ~ /\.env {
            deny all;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}

# TCP/UDP proxy for MongoDB (if needed for direct connections)
stream {
    upstream mongodb {
        server mongo1:27017 max_fails=3 fail_timeout=30s;
        server mongo2:27017 max_fails=3 fail_timeout=30s;
        server mongo3:27017 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 27017;
        proxy_pass mongodb;
        proxy_connect_timeout 5s;
        proxy_timeout 300s;
    }
}